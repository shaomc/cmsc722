/* *****************************************************************************
 * A.L.E (Atari 2600 Learning Environment)
 * Copyright (c) 2009-2010 by Yavar Naddaf
 * Released under GNU General Public License www.gnu.org/licenses/gpl-3.0.txt
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  class_shape.h
 *
 *  Represents one of the 2D shapes of a class.
 *  A sorted lists of these are imported from our class-discovery code, 
 *  currently implemented in Python.
 **************************************************************************** */

#ifndef CLASS_SHAPE_H
#define CLASS_SHAPE_H

#include <vector>
#include "common_constants.h"

class ClassShape;
typedef vector<ClassShape*> ShapeList;

class ClassShape {
    /* *************************************************************************
        Represents one of the 2D shapes of a class.
        
        Member variables:
            - pm_shape_matrix           2D binary shape matrix. 
                                        0 means background color. 
            - i_width, i_height         Shape of the shape matrix
            - i_first_one_ind           The location of the first 1 in the 
                                        first row of the shape. This is used
                                        later in player_agent::
                                        get_class_instances_on_screen
            - i_instance_of_class       The class number that this object is an
                                        instance of. -1 = undefined
    ************************************************************************* */

    public:
        ClassShape() {assert(false);} // this shouldn't be called 

        /* *********************************************************************
            Constructor: generates a ClassShape object from the imported text
            from a text file. The string format is as follows:
                class_num,width,height|
                M[0,0], M[0,1], ..., M[0,n]|
                M[1,0], M[1,1], ..., M[1,n]|
                ...
                M[m,0], M[m,1], ..., M[m,n]|
         ******************************************************************** */
        ClassShape( string& imported_txt);
        virtual ~ClassShape();
        
        /* *********************************************************************
            Prints the shape matrix
         ******************************************************************** */        
        void print_shape(void);
        
        /* *********************************************************************
            Imports the list of class shapes from a text file. This file is 
            currently generated by our Python class-discovery code.
            File format is:
                number_of_shapes\n
                shape_matrix_text_1 (see the comments on constructor) \n
                shape_matrix_text_2\n
                ...
                shape_matrix_text_n
         ******************************************************************** */        
        static ShapeList* import_shape_list(string filename, int& num_classes);
        
        IntMatrix* pm_shape;
        int i_width, i_height;
        int i_first_one_ind;
        int i_instance_of_class;
    protected:
    
        /* *********************************************************************
            Complains about the format of the import text and exits
         ******************************************************************** */        
        void complain_and_exit(string& imported_txt);
};

#endif
